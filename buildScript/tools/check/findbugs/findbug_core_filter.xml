<?xml version='1.0' encoding='UTF-8'?>
<FindBugsFilter>
    <Match>
        <!-- 多线程错误 - 使用同步的属性可能发生改变 -->
        <Bug pattern="ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD" />
    </Match>
    <Match>
        <!-- 多线程错误 - 使用notify()而不是notifyAll() -->
        <Bug pattern="NO_NOTIFY_NOT_NOTIFYALL" />
    </Match>
    <Match>
        <!-- 试验 - 方法可能在清理流或资源时失败 -->
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性应该是package protected -->
        <Bug pattern="MS_PKGPROTECT" />
    </Match>
    <Match>
        <!-- 类引用未能识别的类或方法 -->
        <Bug pattern="VR_UNRESOLVABLE_REFERENCE" />
    </Match>

    <Match>
        <!-- 错误用法 - 构造方法中对未初始化的类进行了读取 -->
        <Bug pattern="UR_UNINIT_READ" />
    </Match>
    <Match>
        <!-- 错误比较int值和long常量 -->
        <Bug pattern="INT_BAD_COMPARISON_WITH_INT_VALUE" />
    </Match>
    <Match>
        <!-- 错误用法 - 在哈希构造中声明了不能哈希的类 -->
        <Bug pattern="HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS" />
    </Match>
    <Match>
        <!-- 高危 - 罕见的equals方法 -->
        <Bug pattern="EQ_UNUSUAL" />
    </Match>
    <Match>
        <!-- 不良实践 - serialVersionUID不是static的 -->
        <Bug pattern="SE_NONSTATIC_SERIALVERSIONID" />
    </Match>
    <Match>
        <!-- 错误用法 - 异常创建后就丢弃了，没有抛出 -->
        <Bug pattern="RV_EXCEPTION_NOT_THROWN" />
    </Match>
    <Match>
        <!-- 错误用法 - equals方法覆盖了父类的equals可能功能不符 -->
        <Bug pattern="EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC" />
    </Match>
    <Match>
        <!-- 多线程错误 - 未在循环中使用的Condition.await() -->
        <Bug pattern="WA_AWAIT_NOT_IN_LOOP" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 可能暴露内部实现，通过与可变对象引用协作 -->
        <Bug pattern="EI_EXPOSE_REP2" />
    </Match>
    <Match>
        <!-- 错误用法 - 属性自己与自己进行了比较 -->
        <Bug pattern="SA_FIELD_SELF_COMPARISON" />
    </Match>
    <Match>
        <!-- 错误用法 - null值一定会被调用 -->
        <Bug pattern="NP_GUARANTEED_DEREF" />
    </Match>
    <Match>
        <!-- 高危 - 立刻使用了readLine()的结果 -->
        <Bug pattern="NP_IMMEDIATE_DEREFERENCE_OF_READLINE" />
    </Match>
    <Match>
        <!-- 不良实践 - 空Finalizer禁用了超类的finalizer -->
        <Bug pattern="FI_NULLIFY_SUPER" />
    </Match>
    <Match>
        <!-- 高危 - 私有readResolve方法不是继承自父类 -->
        <Bug pattern="SE_PRIVATE_READ_RESOLVE_NOT_INHERITED" />
    </Match>
    <Match>
        <!-- 不良实践 - Equals方法不应该假设任何有关参数类型的事宜 -->
        <Bug pattern="BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS" />
    </Match>
    <Match>
        <!-- 危险代码 -  方法对参数收紧空值性注解-->
        <Bug pattern="NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION" />
    </Match>
    <Match>
        <!-- 不良实践 - 类实现了Cloneable ，但是没有定义或使用clone方法 -->
        <Bug pattern="CN_IDIOM" />
    </Match>
    <Match>
        <!-- 性能 - 方法常量调用了静态Math类方法 -->
        <Bug pattern="UM_UNNECESSARY_MATH" />
    </Match>
    <Match>
        <!-- 错误用法 - 忽略了putIfAbsent的返回值，传递给putIfAbsent的值被重用 -->
        <Bug pattern="RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED" />
    </Match>
    <Match>
        <!-- 高危 - 整形的空比较 -->
        <Bug pattern="INT_VACUOUS_COMPARISON" />
    </Match>
    <Match>
        <!-- 不良实践 - 父类初始化时使用了子类 -->
        <Bug pattern="IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION" />
    </Match>
    <Match>
        <!-- 高危 - 类没有覆盖父类的equals方法 -->
        <Bug pattern="EQ_DOESNT_OVERRIDE_EQUALS" />
    </Match>
    <Match>
        <!-- 多线程错误 - 不一致的同步 -->
        <Bug pattern="IS_INCONSISTENT_SYNC" />
    </Match>
    <Match>
        <!-- 多线程错误 - 在Boolean上使用同步可能导致死锁 -->
        <Bug pattern="DL_SYNCHRONIZATION_ON_BOOLEAN" />
    </Match>
    <Match>
        <!-- 不良实践 - 捕获可疑IllegalMonitorStateException，这个检测器会检查try-catch代码块是否捕捉IllegalMonitorStateException异常。 -->
        <Bug pattern="IMSE_DONT_CATCH_IMSE" />
    </Match>

    <Match>
        <!-- 错误用法 - 属性已经标记为NonNull，但是设置了一个null值 -->
        <Bug pattern="NP_STORE_INTO_NONNULL_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 不要使用removeAll清空集合 -->
        <Bug pattern="DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION" />
    </Match>
    <Match>
        <!-- 不良实践 - Class没有继承Exception，虽然名字像一个异常 -->
        <Bug pattern="NM_CLASS_NOT_EXCEPTION" />
    </Match>
    <Match>
        <!-- 不用在iterator里重用entry对象，没有在迭代器中重用条目对象 -->
        <Bug pattern="PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS" />
    </Match>

    <Match>
        <!-- 国际化 - 考虑使用国际化参数型的调用方法版本 -->
        <Bug pattern="DM_CONVERT_CASE" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能在关闭流时失败，方法未能成功关闭流 -->
        <Bug pattern="OS_OPEN_STREAM" />
    </Match>
    <Match>
        <!-- 不良实践 - clone方法没有调用super.clone() -->
        <Bug pattern="CN_IDIOM_NO_SUPER_CALL" />
    </Match>
    <Match>
        <!-- 不良实践 - 协变的compareTo()定义 -->
        <Bug pattern="CO_SELF_NO_OBJECT" />
    </Match>
    <Match>
        <!-- 性能 - 应该是一个静态内部类 -->
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法名应该以小写字母开头 -->
        <Bug pattern="NM_METHOD_NAMING_CONVENTION" />
    </Match>
    <Match>
        <!-- 高危 - 整形乘法的结果转换为long型 -->
        <Bug pattern="ICAST_INTEGER_MULTIPLY_CAST_TO_LONG" />
    </Match>
    <Match>
        <!-- 不良实践 - 装箱的值被拆箱，然后立刻重新装箱了 -->
        <Bug pattern="BX_UNBOXING_IMMEDIATELY_REBOXED" />
    </Match>
    <Match>
        <!-- 错误用法 - 属性自身赋值，这个检测器会找出代码中通过读取一个字段的值来为同一个字段赋值的地方。 -->
        <Bug pattern="SA_FIELD_SELF_ASSIGNMENT" />
    </Match>
    <Match>
        <!-- 性能 - 使用Random的nextInt方法来获得一个随机整数，而不是nextDouble -->
        <Bug pattern="DM_NEXTINT_VIA_NEXTDOUBLE" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法的异常路径中可能引用空指针 -->
        <Bug pattern="NP_NULL_ON_SOME_PATH_EXCEPTION" />
    </Match>
    <Match>
        <!-- 多线程错误 - 方法对一个属性循环复制，这个检测器会找出代码中自旋读取一个字段的循环（自旋锁）。 -->
        <Bug pattern="SP_SPIN_ON_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 数值需要类型标示，但是却标记为未知 -->
        <Bug pattern="TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK" />
    </Match>
    <Match>
        <!-- 错误用法 - 错误比较非负值与负数 -->
        <Bug pattern="INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE" />
    </Match>
    <Match>
        <!-- 使用错误 - TestCase定义的setUp没有调用super.setUp() -->
        <Bug pattern="IJU_SETUP_NO_SUPER" />
    </Match>
    <Match>
        <!-- 错误用法 - TestCase没有任何测试 -->
        <Bug pattern="IJU_NO_TESTS" />
    </Match>
    <Match>
        <!-- 高危 - instanceof会一直返回true -->
        <Bug pattern="BC_VACUOUS_INSTANCEOF" />
    </Match>
    <Match>
        <!-- 不良实践 - 属性名应该以小写字母开头 -->
        <Bug pattern="NM_FIELD_NAMING_CONVENTION" />
    </Match>
    <Match>
        <!-- 不良实践 - 类名应该以大写字母开头 -->
        <Bug pattern="NM_CLASS_NAMING_CONVENTION" />
    </Match>
    <Match>
        <!-- 错误用法 - hasNext方法调用了next方法 -->
        <Bug pattern="DMI_CALLING_NEXT_FROM_HASNEXT" />
    </Match>
    <Match>
        <!-- 性能 - 方法在循环中使用+进行字符串拼接，这个检测器会找出在循环中使用“+”运算符拼接字符串的地方。 -->
        <Bug pattern="SBSC_USE_STRINGBUFFER_CONCATENATION" />
    </Match>
    <Match>
        <!-- 错误用法 - 无意义的自我计算 (比如 x & x) -->
        <Bug pattern="SA_FIELD_SELF_COMPUTATION" />
    </Match>
    <Match>
        <!-- 错误用法 - 在哈希数据结构中使用的类没有定义hashCode()方法 -->
        <Bug pattern="HE_USE_OF_UNHASHABLE_CLASS" />
    </Match>
    <Match>
        <!-- 高危 - 把null设置给不会用到的局部变量 -->
        <Bug pattern="DLS_DEAD_LOCAL_STORE_OF_NULL" />
    </Match>
    <Match>
        <!-- 不良实践 - 类是可序列化的，但是父类没有定义无参数构造方法；类实现了Serializable接口，但是它的父类没有定义一个空构造器 -->
        <Bug pattern="SE_NO_SUITABLE_CONSTRUCTOR" />
    </Match>
    <Match>
        <!-- 高危 - 重复比较非空值和null -->
        <Bug pattern="RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE" />
    </Match>
    <Match>
        <!-- 错误用法 - 构造方法没有初始化属性 -->
        <Bug pattern="UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    </Match>
    <Match>
        <!-- 高危 - hashCode的结果可能是负数negative，散列码的余数可能是负数 -->
        <Bug pattern="RV_REM_OF_HASHCODE" />
    </Match>
    <Match>
        <!-- 错误用法 - 可疑的引用与常量的比较， -->
        <Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性不是final，但是应该设置成final -->
        <Bug pattern="MS_SHOULD_BE_FINAL" />
    </Match>
    <Match>
        <!-- 多线程错误 - 错误的对static属性进行了延迟初始化 -->
        <Bug pattern="LI_LAZY_INIT_STATIC" />
    </Match>
    <Match>
        <!-- 试验 - 未期待/未期望的findbugs警告，检查@ExpectedWarning和@NoWarning注解。这个检测器仅仅用于测试FindBugs。 -->
        <Bug pattern="FB_UNEXPECTED_WARNING" />
    </Match>
    <Match>
        <!-- 多线程错误 - 同步内部String可能导致死锁 -->
        <Bug pattern="DL_SYNCHRONIZATION_ON_SHARED_CONSTANT" />
    </Match>
    <Match>
        <!-- 错误用法 - 泛型参数与方法参数没有相互关系 -->
        <Bug pattern="GC_UNRELATED_TYPES" />
    </Match>
    <Match>
        <!-- 不良实践 - 非serializable类有一个可序列化的内部类 -->
        <Bug pattern="SE_BAD_FIELD_INNER_CLASS" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - Finalizer应该是protected，不能是public -->
        <Bug pattern="FI_PUBLIC_SHOULD_BE_PROTECTED" />
    </Match>
    <Match>
        <!-- 错误用法 - 在带符号的byte值上进行位add运算 -->
        <Bug pattern="BIT_ADD_OF_SIGNED_BYTE" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法传递null给一个非空参数 -->
        <Bug pattern="NP_NONNULL_PARAM_VIOLATION" />
    </Match>
    <Match>
        <!-- 高危 - 加载了已知的null值，检查代码中加载明知为空的值的地方。 -->
        <Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE" />
    </Match>
    <Match>
        <!-- 多线程错误 - 静态DateFormat，这个检测器会发出关于java.util.Calendar或java.text.DateFormat类型（及其子类）的静态字段的警报，因为Calendar在使用多线程的情况下是天生不安全的。 -->
        <Bug pattern="STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE" />
    </Match>
    <Match>
        <!-- 多线程错误 - 不匹配的wait()，不能对当前被锁定的对象调用wait()、notify()、notifyAll()等方法，这个检测器会找出代码中对当前被锁定对象调用这些方法的地方。这个检测器的运行速度中等。-->
        <Bug pattern="MWN_MISMATCHED_WAIT" />
    </Match>
    <Match>
        <!-- 错误用法 - int值转换成float，然后传递给Math.round -->
        <Bug pattern="ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND" />
    </Match>
    <Match>
        <!-- 错误用法 - 非法的正则表达式 -->
        <Bug pattern="RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION" />
    </Match>
    <Match>
        <!-- 性能 - 方法使用了toArray()对空数组参数 -->
        <Bug pattern="ITA_INEFFICIENT_TO_ARRAY" />
    </Match>
    <Match>
        <!-- 高危 - 可疑的抽象集合类型转换，分析找出错误的对象引用转换。 -->
        <Bug pattern="BC_BAD_CAST_TO_ABSTRACT_COLLECTION" />
    </Match>
    <Match>
        <!-- 错误用法 - 不必要的类型检测使用instanceof操作符 -->
        <Bug pattern="SIO_SUPERFLUOUS_INSTANCEOF" />
    </Match>
    <Match>
        <!-- 使用错误 - 0至1的随机数被当做整数0 -->
        <Bug pattern="RV_01_TO_INT" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法忽略返回值，这样可以么？-->
        <Bug pattern="RV_RETURN_VALUE_IGNORED_INFERRED" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了equals()，但使用了Object.hashCode() -->
        <Bug pattern="HE_EQUALS_USE_HASHCODE" />
    </Match>
    <Match>
        <!-- 错误用法 - 集合转换为数组元素时发生的类型转换错误 -->
        <Bug pattern="BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY" />
    </Match>
    <Match>
        <!-- 高危 - 无符号右移转换为short/byte -->
        <Bug pattern="ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT" />
    </Match>
    <Match>
        <!-- 不良实践 - 未初始化的public 或 protected 属性 -->
        <Bug pattern="UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 测试是否与NaN相等，找出代码中的浮点数判等表达式 -->
        <Bug pattern="FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER" />
    </Match>
    <Match>
        <!-- 不良实践 - 调换了compareTo()/compare()结果的正负 -->
        <Bug pattern="RV_NEGATING_RESULT_OF_COMPARETO" />
    </Match>
    <Match>
        <!-- 错误用法 - 值可能带着一个类型修饰符，一直使用的方式是与这个类型修饰符相悖的 -->
        <Bug pattern="TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK" />
    </Match>
    <Match>
        <!-- 错误用法 - 某个值使用了注解标记不会限制类型，但是这个限制是必须的 -->
        <Bug pattern="TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED" />
    </Match>
    <Match>
        <!-- 错误用法 - 类中保存了无用字符，这个检测器会找出赋值之后从来没有使用过的局部向量。 -->
        <Bug pattern="DLS_DEAD_STORE_OF_CLASS_LITERAL" />
    </Match>
    <Match>
        <!-- 高危 - 给局部变量双重赋值，这个检测器会找出代码中通过读取一个字段的值来为同一个字段赋值的地方。 -->
        <Bug pattern="SA_LOCAL_DOUBLE_ASSIGNMENT" />
    </Match>
    <Match>
        <!-- 错误用法 - 错误的尝试计算带符号的32位hashcodde的绝对值 -->
        <Bug pattern="RV_ABSOLUTE_VALUE_OF_HASHCODE" />
    </Match>
    <Match>
        <!-- 错误用法 - 不兼容的位掩码 -->
        <Bug pattern="BIT_IOR" />
    </Match>
    <Match>
        <!-- 错误用法 - equals()方法定义没有覆盖Object.equals(Object) -->
        <Bug pattern="EQ_OTHER_USE_OBJECT" />
    </Match>
    <Match>
        <!-- 错误 - 非常容易迷惑的方法名，寻找代码中是否有可疑的方法命名。 -->
        <Bug pattern="NM_VERY_CONFUSING" />
    </Match>
    <Match>
        <!-- 试验 - 抽象方法已经在实现的接口中定义了，这个检测器会找出实现在父类中定义的方法的子类，子类仅仅通过将参数原封未动地传递给父类方法来实现这个方法。这些方法都是可以被移除的。 -->
        <Bug pattern="USM_USELESS_ABSTRACT_METHOD" />
    </Match>
    <Match>
        <!-- 不良实践 - 迭代器的next()方法不能抛出 -->
        <Bug pattern="IT_NO_SUCH_ELEMENT" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性是可变数组，这个检测器会找出可能会被恶意代码篡改的静态字段。 -->
        <Bug pattern="MS_MUTABLE_ARRAY" />
    </Match>
    <Match>
        <!-- 高危 - 调用substring(0)会返回原值 -->
        <Bug pattern="DMI_USELESS_SUBSTRING" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用了低效的浮点书构造方法；应该使用静态的valueOf代替 -->
        <Bug pattern="DM_FP_NUMBER_CTOR" />
    </Match>
    <Match>
        <!-- 错误用法 - 右移的数值不在0..31范围内 -->
        <Bug pattern="ICAST_BAD_SHIFT_AMOUNT" />
    </Match>
    <Match>
        <!-- 性能 - 未读取的属性：这个属性是否应该是static的？ -->
        <Bug pattern="SS_SHOULD_BE_STATIC" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能抛出异常，这个检测器会找出代码中捕捉异常，但是却没有对异常进行任何处理的地方。 -->
        <Bug pattern="DE_MIGHT_DROP" />
    </Match>
    <Match>
        <!-- 多线程错误 - 空的同步块 -->
        <Bug pattern="ESync_EMPTY_SYNC" />
    </Match>
    <Match>
        <!-- 高危 - 扩展Servlet的类使用了实例变量 -->
        <Bug pattern="MTIA_SUSPECT_SERVLET_INSTANCE_FIELD" />
    </Match>
    <Match>
        <!-- 安全风险 - 使用非常量字符串创建了一个PreparedStatement -->
        <Bug pattern="SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING" />
    </Match>
    <Match>
        <!-- 不良实践 - 协变equals()方法定义 -->
        <Bug pattern="EQ_SELF_NO_OBJECT" />
    </Match>
    <Match>
        <!-- 高危 - 继承了struts Action的类使用了实例变量 -->
        <Bug pattern="MTIA_SUSPECT_STRUTS_INSTANCE_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - readResolve方法必须返回Object -->
        <Bug pattern="SE_READ_RESOLVE_MUST_RETURN_OBJECT" />
    </Match>
    <Match>
        <!-- 安全风险 - 空的数据库密码 -->
        <Bug pattern="DMI_EMPTY_DB_PASSWORD" />
    </Match>
    <Match>
        <!-- 多线程错误 - 类的writeObject()方法是同步的，但是没有做其他事情 -->
        <Bug pattern="WS_WRITEOBJECT_SYNC" />
    </Match>
    <Match>
        <!-- 不良实践 - 可序列化的内部类 -->
        <Bug pattern="SE_INNER_CLASS" />
    </Match>
    <Match>
        <!-- 高危 - 类的transient属性不能序列化 -->
        <Bug pattern="SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS" />
    </Match>
    <Match>
        <!-- 使用错误 - 尝试计算32位随机整数的绝对值 -->
        <Bug pattern="RV_ABSOLUTE_VALUE_OF_RANDOM_INT" />
    </Match>
    <Match>
        <!-- 高危 - 类实现了父类一样的接口 -->
        <Bug pattern="RI_REDUNDANT_INTERFACES" />
    </Match>
    <Match>
        <!-- 错误用法 - 集合不应该包含自身，当调用形参为java.lang.Object类型的范型集合方法时，这个检测器会检查使用的实参是否与集合形参相关。不要将不相关类型的实参放在集合中。例如，如果foo是List<String>类型的，bar是StringBuffer类型的，那么调用foo.contains(bar)方法只会返回false。这个检测器运行速度较快。 -->
        <Bug pattern="DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES" />
    </Match>
    <Match>
        <!-- 多线程错误 - 调用静态DateFormat -->
        <Bug pattern="STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE" />
    </Match>
    <Match>
        <!-- 错误用法 - 明显的无限循环 -->
        <Bug pattern="IL_INFINITE_LOOP" />
    </Match>
    <Match>
        <!-- 不良实践 - 只提供静态方法的类不需要实例化 -->
        <Bug pattern="ISC_INSTANTIATE_STATIC_CLASS" />
    </Match>
    <Match>
        <!-- 不良实践 - 使用== 或 !=比较String -->
        <Bug pattern="ES_COMPARING_STRINGS_WITH_EQ" />
    </Match>
    <Match>
        <!-- 错误用法 - 类定义了属性覆盖了父类的属性 -->
        <Bug pattern="MF_CLASS_MASKS_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 调用了null指针 -->
        <Bug pattern="NP_ALWAYS_NULL" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用了低效的Boolean构造方法；使用Boolean.valueOf(...)代替 -->
        <Bug pattern="DM_BOOLEAN_CTOR" />
    </Match>
    <Match>
        <!-- 不良实践 - equals检测不兼容的参数操作 -->
        <Bug pattern="EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS" />
    </Match>
    <Match>
        <!-- 安全风险 - Servlet反射跨域脚本漏洞 -->
        <Bug pattern="XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能在关闭database资源时失败 -->
        <Bug pattern="ODR_OPEN_DATABASE_RESOURCE" />
    </Match>
    <Match>
        <!-- 不良实践 - 并发抽象的顺序调用可能不是原子的 -->
        <Bug pattern="AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION" />
    </Match>
    <Match>
        <!-- 不良实践 - 比较字符串参数使用了 == 或 != -->
        <Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ" />
    </Match>
    <Match>
        <!-- 不良实践 - Transient属性没有再反序列化时被设置 -->
        <Bug pattern="SE_TRANSIENT_FIELD_NOT_RESTORED" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法忽略异常返回值 -->
        <Bug pattern="RV_RETURN_VALUE_IGNORED_BAD_PRACTICE" />
    </Match>
    <Match>
        <!-- 高危 - 计算平均值可能溢出 -->
        <Bug pattern="IM_AVERAGE_COMPUTATION_COULD_OVERFLOW" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法在布尔表达式中分配了boolean文字 -->
        <Bug pattern="QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT" />
    </Match>
    <Match>
        <!-- 性能 - URL的equals 和 hashCode 方法会被堵塞 -->
        <Bug pattern="DMI_BLOCKING_METHODS_ON_URL" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了hashCode()但是没定义equals() -->
        <Bug pattern="HE_HASHCODE_NO_EQUALS" />
    </Match>
    <Match>
        <!-- 多线程错误 - 方法没有在任何路径中释放锁 -->
        <Bug pattern="UL_UNRELEASED_LOCK" />
    </Match>
    <Match>
        <!-- 不良实践 - 一个明显不合理的方法调用 -->
        <Bug pattern="DMI_DOH" />
    </Match>
    <Match>
        <!-- 不良实践 - 在HttpSession中保存了不可序列化的对象 -->
        <Bug pattern="J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION" />
    </Match>
    <Match>
        <!-- 高危 - 在两个switch语句中使用了相同的代码 -->
        <Bug pattern="DB_DUPLICATE_SWITCH_CLAUSES" />
    </Match>
    <Match>
        <!-- 不良实践 - 读取了未初始化的public或protected属性 -->
        <Bug pattern="NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD" />
    </Match>
    <Match>
        <!-- 试验 - 类间存在循环引用 -->
        <Bug pattern="CD_CIRCULAR_DEPENDENCY" />
    </Match>
    <Match>
        <!-- 错误用法 - TestCase定义的tearDown没有调用 -->
        <Bug pattern="IJU_TEARDOWN_NO_SUPER" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用了效率很低的new String(String)构造方法 -->
        <Bug pattern="DM_STRING_CTOR" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法返回boolean类型返回了null -->
        <Bug pattern="NP_BOOLEAN_RETURN_NULL" />
    </Match>
    <Match>
        <!-- 高危 - 初始化死循环 -->
        <Bug pattern="IC_INIT_CIRCULARITY" />
    </Match>
    <Match>
        <!-- 错误用法 - 基础类型拆箱后用于三元表达式 -->
        <Bug pattern="BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR" />
    </Match>
    <Match>
        <!-- 多线程错误 - 同步和空值检测发生在同一个属性上，对同一个字段进行同步和空值检查 -->
        <Bug pattern="NP_SYNC_AND_NULL_CHECK_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 一个集合被添加到自身，检查代码中是否有无限的递归循环。 -->
        <Bug pattern="IL_CONTAINER_ADDED_TO_ITSELF" />
    </Match>
    <Match>
        <!-- 错误用法 - instanceof一直返回false -->
        <Bug pattern="BC_IMPOSSIBLE_INSTANCEOF" />
    </Match>
    <Match>
        <!-- 错误用法 - 不能使用反射检测没有标记为runtime rentention的注解的存在 -->
        <Bug pattern="DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION" />
    </Match>
    <Match>
        <!-- 错误用法 - 在数组上调用了hashCode -->
        <Bug pattern="DMI_INVOKING_HASHCODE_ON_ARRAY" />
    </Match>
    <Match>
        <!-- 不良实践 - 在util.concurrent抽象中使用监控样式的wait方法 -->
        <Bug pattern="JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT" />
    </Match>
    <Match>
        <!-- 不良实践 - 使用的标记是未来java版本中的关键字 -->
        <Bug pattern="NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER" />
    </Match>
    <Match>
        <!-- 错误用法 - 自己和自己的值比较 -->
        <Bug pattern="SA_LOCAL_SELF_COMPARISON" />
    </Match>
    <Match>
        <!-- 不良实践 - volatile的自增操作不是原子的   -->
        <Bug pattern="VO_VOLATILE_INCREMENT" />
    </Match>
    <Match>
        <!-- 错误用法 - readResolve方法没有生命为static方法 -->
        <Bug pattern="SE_READ_RESOLVE_IS_STATIC" />
    </Match>
    <Match>
        <!-- 不良实践 - 格式化代码应该使用%n代替\n -->
        <Bug pattern="VA_FORMAT_STRING_USES_NEWLINE" />
    </Match>
    <Match>
        <!-- 高危 - 转换成具体集合可能有问题，这个检测器会通过数据流分析找出错误的对象引用转换。 -->
        <Bug pattern="BC_BAD_CAST_TO_CONCRETE_COLLECTION" />
    </Match>
    <Match>
        <!-- 安全风险 - 非常量的字符串传递给方法执行SQL语句 -->
        <Bug pattern="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE" />
    </Match>
    <Match>
        <!-- 多线程错误- 不匹配的notify() -->
        <Bug pattern="MWN_MISMATCHED_NOTIFY" />
    </Match>
    <Match>
        <!-- 不良实践 - 创建了一个空的jar方法入口 -->
        <Bug pattern="AM_CREATES_EMPTY_JAR_FILE_ENTRY" />
    </Match>
    <Match>
        <!-- 多线程错误 - 无条件等待 -->
        <Bug pattern="UW_UNCOND_WAIT" />
    </Match>
    <Match>
        <!-- 高危 - 方法检查检查String.indexOf的结果是否为正数 -->
        <Bug pattern="RV_CHECK_FOR_POSITIVE_INDEXOF" />
    </Match>
    <Match>
        <!-- 高危 - 未用的局部变量 -->
        <Bug pattern="DLS_DEAD_LOCAL_STORE" />
    </Match>
    <Match>
        <!-- 多线程错误 - 数组的volatile引用不会把数组元素也当做volatile来引用 -->
        <Bug pattern="VO_VOLATILE_REFERENCE_TO_ARRAY" />
    </Match>
    <Match>
        <!-- 多线程错误 - 构造方法调用了Thread.start() -->
        <Bug pattern="SC_START_IN_CTOR" />
    </Match>
    <Match>
        <!-- 性能 - keySet迭代是低效的，使用entrySet代替 -->
        <Bug pattern="WMI_WRONG_MAP_ITERATOR" />
    </Match>
    <Match>
        <!-- 高危 - 没有判断readLine()的结果是否为空 -->
        <Bug pattern="NP_DEREFERENCE_OF_READLINE_VALUE" />
    </Match>
    <Match>
        <!-- 错误用法 - 明显的无限递归循环，检查代码中是否有无限的递归循环。 -->
        <Bug pattern="IL_INFINITE_RECURSIVE_LOOP" />
    </Match>
    <Match>
        <!-- 不良实践 - 无用的局部变量可能与实例属性同名 -->
        <Bug pattern="DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - 一个入口的添加可能因为重用Entry对象导致失败 -->
        <Bug pattern="DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS" />
    </Match>
    <Match>
        <!-- 错误用法 - 对于month错误的常量值，表示月份的错误常量值 -->
        <Bug pattern="DMI_BAD_MONTH" />
    </Match>
    <Match>
        <!-- 多线程错误 - 可能对属性进行了双重检测 -->
        <Bug pattern="DC_DOUBLECHECK" />
    </Match>
    <Match>
        <!-- 高危 - 对奇偶判断不能用于负数 -->
        <Bug pattern="IM_BAD_CHECK_FOR_ODD" />
    </Match>
    <Match>
        <!-- 多线程错误 - 根据条件监控wait()的调用 -->
        <Bug pattern="DM_MONITOR_WAIT_ON_CONDITION" />
    </Match>
    <Match>
        <!-- 错误用法 - equals方法一直返回false -->
        <Bug pattern="EQ_ALWAYS_FALSE" />
    </Match>
    <Match>
        <!-- 错误用法 - 在带符号的byte值上进行位OR运算 -->
        <Bug pattern="BIT_IOR_OF_SIGNED_BYTE" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 可能通过返回一个可变对象的引用暴露了内部实现 -->
        <Bug pattern="EI_EXPOSE_REP" />
    </Match>
    <Match>
        <!-- 不良实践 - Random对象创建后只用了一次 -->
        <Bug pattern="DMI_RANDOM_USED_ONLY_ONCE" />
    </Match>
    <Match>
        <!-- 高危 - 希望传入Runnable的地方传入了一个Thread -->
        <Bug pattern="DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法调用把null传递给一个非null参数 -->
        <Bug pattern="NP_NULL_PARAM_DEREF" />
    </Match>
    <Match>
        <!-- 错误用法 - "."用作正则表达式 -->
        <Bug pattern="RE_POSSIBLE_UNINTENDED_PATTERN" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了tostring(); 应该是toString()吧？-->
        <Bug pattern="NM_LCASE_TOSTRING" />
    </Match>
    <Match>
        <!-- 不良实践 - 非常迷惑的方法名称（可能是内部方法） -->
        <Bug pattern="NM_VERY_CONFUSING_INTENTIONAL" />
    </Match>
    <Match>
        <!-- 高危 - 类是final的，但是定义了protected属性 -->
        <Bug pattern="CI_CONFUSED_INHERITANCE" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能因为checked exception导致清理流或资源失败 -->
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE" />
    </Match>
    <Match>
        <!-- 不良实践 - 类是可扩展的，但是没有提供无参数的构造方法 -->
        <Bug pattern="SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION" />
    </Match>
    <Match>
        <!-- 不良实践 - Finalizer中子还有null属性 -->
        <Bug pattern="FI_FINALIZER_ONLY_NULLS_FIELDS" />
    </Match>
    <Match>
        <!-- 不良实践 - switch语句失败抛出异常导致无用的存储 -->
        <Bug pattern="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW" />
    </Match>
    <Match>
        <!-- 错误用法 - 参数没有被使用，但是被重新赋值了 -->
        <Bug pattern="IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN" />
    </Match>
    <Match>
        <!-- 多线程错误 - 未同步的getter方法，同步的setter方法 -->
        <Bug pattern="UG_SYNC_SET_UNSYNC_GET" />
    </Match>
    <Match>
        <!-- 错误用法 - 对一个变量进行无意义的自我计算 (比如 x & x) -->
        <Bug pattern="SA_LOCAL_SELF_COMPUTATION" />
    </Match>
    <Match>
        <!-- 不良实践 - 使用了未来java版本中成为关键字的标识 -->
        <Bug pattern="NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER" />
    </Match>
    <Match>
        <!-- 多线程错误 - Wait不在循环中 -->
        <Bug pattern="WA_NOT_IN_LOOP" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法必须是private的为了让序列化正常工作，为了能够成功序列化，方法必须是私有的 -->
        <Bug pattern="SE_METHOD_MUST_BE_PRIVATE" />
    </Match>
    <Match>
        <!-- 错误 - 在thread实例上调用了静态Thread.interrupted()方法 -->
        <Bug pattern="STI_INTERRUPTED_ON_UNKNOWNTHREAD" />
    </Match>
    <Match>
        <!-- 不良实践 - 应该删除空的finalizer -->
        <Bug pattern="FI_EMPTY" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性是可变的Hashtable -->
        <Bug pattern="MS_MUTABLE_HASHTABLE" />
    </Match>
    <Match>
        <!-- 错误用法 - int转换成double，然后传递给Math.ceil -->
        <Bug pattern="ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL" />
    </Match>
    <Match>
        <!-- 多线程错误 - 不一致的同步 -->
        <Bug pattern="IS2_INCONSISTENT_SYNC" />
    </Match>
    <Match>
        <!-- 不良实践 - 类是可序列化的，但是没有定义serialVersionUID -->
        <Bug pattern="SE_NO_SERIALVERSIONID" />
    </Match>
    <Match>
        <!-- 使用错误 - 某个值使用了注解限制类型，但是这个限制永远不会发生 -->
        <Bug pattern="TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED" />
    </Match>
    <Match>
        <!-- 不良实践 - 不可变的类的属性应该是final -->
        <Bug pattern="JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS" />
    </Match>
    <Match>
        <!-- 高危 - 捕获了没有抛出的异常 -->
        <Bug pattern="REC_CATCH_EXCEPTION" />
    </Match>
    <Match>
        <!-- 安全风险 -servlet中的绝对路径遍历 -->
        <Bug pattern="PT_ABSOLUTE_PATH_TRAVERSAL" />
    </Match>
    <Match>
        <!-- 高危 - 对一个已知不是null的值重复进行空值判断 -->
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
    </Match>
    <Match>
        <!-- 不良实践 - Classloaders应该只在doPrivileged块中被创建 -->
        <Bug pattern="DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED" />
    </Match>
    <Match>
        <!-- 错误用法 - 执行到下一行的无用流程控制 -->
        <Bug pattern="UCF_USELESS_CONTROL_FLOW_NEXT_LINE" />
    </Match>
    <Match>
        <!-- 高危 - 方法直接调用了xml接口的一个具体实现 -->
        <Bug pattern="XFB_XML_FACTORY_BYPASS" />
    </Match>
    <Match>
        <!-- 不良实践 - equals()方法没有检测null参数 -->
        <Bug pattern="NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT" />
    </Match>
    <Match>
        <!-- 性能 - 可以重构成一个静态内部类 -->
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_ANON" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用了低效的new String()构造方法 -->
        <Bug pattern="DM_STRING_VOID_CTOR" />
    </Match>
    <Match>
        <!-- 安全风险 - HTTP响应拆分漏洞 -->
        <Bug pattern="HRS_REQUEST_PARAMETER_TO_HTTP_HEADER" />
    </Match>
    <Match>
        <!-- 试验 - 错误的Applet构造方法依赖未初始化的AppletStub -->
        <Bug pattern="BAC_BAD_APPLET_CONSTRUCTOR" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法参数顺序翻转 -->
        <Bug pattern="DMI_ARGUMENTS_WRONG_ORDER" />
    </Match>
    <Match>
        <!-- 错误用法 - equals()方法定义，但是没有覆盖equals(Object) -->
        <Bug pattern="EQ_OTHER_NO_OBJECT" />
    </Match>
    <Match>
        <!-- 安全风险 - 硬编码了数据库密码 -->
        <Bug pattern="DMI_CONSTANT_DB_PASSWORD" />
    </Match>
    <Match>
        <!-- 不良实践 - compareTo()或compare()返回Integer.MIN_VALUE -->
        <Bug pattern="CO_COMPARETO_RESULTS_MIN_VALUE" />
    </Match>
    <Match>
        <!-- 错误用法 - 读取未初始化的属性 -->
        <Bug pattern="NP_UNWRITTEN_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 使用指针比较不同的类型 -->
        <Bug pattern="EC_UNRELATED_TYPES_USING_POINTER_EQUALITY" />
    </Match>
    <Match>
        <!-- 不良实践 - Finalizer除了调用父类的finalizer以外什么也没做 -->
        <Bug pattern="FI_USELESS" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法忽略了InputStream.skip()的结果 -->
        <Bug pattern="SR_NOT_CHECKED" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法忽略InputStream.read()的返回值 -->
        <Bug pattern="RR_NOT_CHECKED" />
    </Match>
    <Match>
        <!-- 多线程错误 - 类的readObject()方法不是同步的 -->
        <Bug pattern="RS_READOBJECT_SYNC" />
    </Match>
    <Match>
        <!-- 错误用法 - 匿名内部类中定义的不可调用的方法 -->
        <Bug pattern="UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法忽略了返回值 -->
        <Bug pattern="RV_RETURN_VALUE_IGNORED" />
    </Match>
    <Match>
        <!-- 高危 - 考虑返回空数组而不是null -->
        <Bug pattern="PZLA_PREFER_ZERO_LENGTH_ARRAYS" />
    </Match>
    <Match>
        <!-- 高危 - 考虑返回空数组而不是null -->
        <Bug pattern="SQL_BAD_PREPARED_STATEMENT_ACCESS" />
    </Match>
    <Match>
        <!-- 错误用法 - null值会在exception处理中被用到 -->
        <Bug pattern="NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH" />
    </Match>
    <Match>
        <!-- 安全风险 - HTTP cookie可能来自不被信任的输入 -->
        <Bug pattern="HRS_REQUEST_PARAMETER_TO_COOKIE" />
    </Match>
    <Match>
        <!-- 不良实践 - 类名不应该和父类的名称相同 -->
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_SUPERCLASS" />
    </Match>
    <Match>
        <!-- 不良实践 - Switch语句中一个case失败以后进入了下一个case -->
        <Bug pattern="SF_SWITCH_FALLTHROUGH" />
    </Match>
    <Match>
        <!-- 多线程错误 - 可变的servlet属性 -->
        <Bug pattern="MSF_MUTABLE_SERVLET_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法没有覆盖父类的方法因为参数包名错误 -->
        <Bug pattern="NM_WRONG_PACKAGE_INTENTIONAL" />
    </Match>
    <Match>
        <!-- 高危 - 这个路径上空指针引用是不可实现的 -->
        <Bug pattern="NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE" />
    </Match>
    <Match>
        <!-- 多线程错误 - 方法没有在所有异常路径释放锁 -->
        <Bug pattern="UL_UNRELEASED_LOCK_EXCEPTION_PATH" />
    </Match>
    <Match>
        <!-- 高危 - 在整形上进行位操作时有一些位上出现空洞 -->
        <Bug pattern="INT_VACUOUS_BIT_OPERATION" />
    </Match>
    <Match>
        <!-- 高危 - 测试浮点数相等 -->
        <Bug pattern="FE_FLOATING_POINT_EQUALITY" />
    </Match>
    <Match>
        <!-- 错误用法 - 属性曾经设置为null -->
        <Bug pattern="UWF_NULL_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - 未被读取的public/protected属性 -->
        <Bug pattern="URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 非静态内部类和ThreadLocal的致命结合 -->
        <Bug pattern="SIC_THREADLOCAL_DEADLY_EMBRACE" />
    </Match>
    <Match>
        <!-- 使用错误 - 使用equals()比较不同类型 -->
        <Bug pattern="EC_UNRELATED_TYPES" />
    </Match>
    <Match>
        <!-- 试验 - OpenJDK中存在潜在的丢失logger的风险，因为弱引用 -->
        <Bug pattern="LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE" />
    </Match>
    <Match>
        <!-- 性能 - 仅为了获得一个方法就创建了一个对象 -->
        <Bug pattern="DM_NEW_FOR_GETCLASS" />
    </Match>
    <Match>
        <!-- 高危 - 在两个分支中使用了相同的代码 -->
        <Bug pattern="DB_DUPLICATE_BRANCHES" />
    </Match>
    <Match>
        <!-- 错误用法 - 未赋值属性 -->
        <Bug pattern="UWF_UNWRITTEN_FIELD" />
    </Match>
    <Match>
        <!-- 高危 - 类包含一个硬编码的绝对路径 -->
        <Bug pattern="DMI_HARDCODED_ABSOLUTE_FILENAME" />
    </Match>
    <Match>
        <!-- 不良实践 - 创建了一个空的zip文件的入口 -->
        <Bug pattern="AM_CREATES_EMPTY_ZIP_FILE_ENTRY" />
    </Match>
    <Match>
        <!-- 不良实践 - 检测带符号的位运算 -->
        <Bug pattern="BIT_SIGNED_CHECK" />
    </Match>
    <Match>
        <!-- 高危 - 可疑的非短路逻辑，这个检测器会找出代码中使用非短路布尔运算符（使用|和&，而不是||和&&）的可疑之处。 -->
        <Bug pattern="NS_NON_SHORT_CIRCUIT" />
    </Match>
    <Match>
        <!-- 错误用法 - 明显的方法/构造方法混淆 -->
        <Bug pattern="NM_METHOD_CONSTRUCTOR_CONFUSION" />
    </Match>
    <Match>
        <!-- 错误用法 - 调用equals()比较不同的接口类型 -->
        <Bug pattern="EC_UNRELATED_INTERFACES" />
    </Match>
    <Match>
        <!-- 高危 - 非持久化的对象写入了ObjectOutput -->
        <Bug pattern="DMI_NONSERIALIZABLE_OBJECT_WRITTEN" />
    </Match>
    <Match>
        <!-- 高危 - 其余32位带符号随机整数 -->
        <Bug pattern="RV_REM_OF_RANDOM_INT" />
    </Match>
    <Match>
        <!-- 安全风险 - servlet的反射导致跨站脚本漏洞 -->
        <Bug pattern="XSS_REQUEST_PARAMETER_TO_SEND_ERROR" />
    </Match>
    <Match>
        <!-- 试验 - 方法访问了一个拥有的类的私有成员 -->
        <Bug pattern="IMA_INEFFICIENT_MEMBER_ACCESS" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了equal(Object)，应该是equals(Object)吧？ -->
        <Bug pattern="NM_BAD_EQUAL" />
    </Match>
    <Match>
        <!-- 高危 - 调用返回返回值可能出现null值 -->
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
    </Match>
    <Match>
        <!-- 使用错误 - 怀疑对两个布尔值的引用进行比较 -->
        <Bug pattern="RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - Public static方法可能因为返回了一个数组而暴露内部实现 -->
        <Bug pattern="MS_EXPOSE_REP" />
    </Match>
    <Match>
        <!-- 多线程错误 - 方法在一个修改了的属性上进行了同步 -->
        <Bug pattern="ML_SYNC_ON_UPDATED_FIELD" />
    </Match>
    <Match>
        <!-- 高危 - 通过一个实例方法更新静态属性 -->
        <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
    </Match>
    <Match>
        <!-- 性能 - 无用的属性 -->
        <Bug pattern="UUF_UNUSED_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - 抽象类定义了协变的equals方法，抽象类定义了共变的compareTo()方法 -->
        <Bug pattern="EQ_ABSTRACT_SELF" />
    </Match>
    <Match>
        <!-- 使用错误 - 不可能的转换 -->
        <Bug pattern="BC_IMPOSSIBLE_CAST" />
    </Match>
    <Match>
        <!-- 不良实践 - Switch语句中没有包含default -->
        <Bug pattern="SF_SWITCH_NO_DEFAULT" />
    </Match>
    <Match>
        <!-- 高危 - 类在公用接口中暴露了同步和信号 -->
        <Bug pattern="PS_PUBLIC_SEMAPHORES" />
    </Match>
    <Match>
        <!-- 错误用法 - 使用空参数调用equals() -->
        <Bug pattern="EC_NULL_ARG" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 把可变对象保存到静态字段中可能会暴露内部静态状态 -->
        <Bug pattern="EI_EXPOSE_STATIC_REP2" />
    </Match>
    <Match>
        <!-- 错误 - 对数组执行toString -->
        <Bug pattern="DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY" />
    </Match>
    <Match>
        <!-- 错误用法 - 值可能没有携带一个类修饰符，但是使用中会一直需要这个类修饰符 -->
        <Bug pattern="TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK" />
    </Match>
    <Match>
        <!-- 错误用法 - close()调用了一个永远是null的值 -->
        <Bug pattern="NP_CLOSING_NULL" />
    </Match>
    <Match>
        <!-- 错误用法 - 在int上调用了Double.longBitsToDouble -->
        <Bug pattern="DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT" />
    </Match>
    <Match>
        <!-- 错误用法 - equals方法比较类名而不是比较类 -->
        <Bug pattern="EQ_COMPARING_CLASS_NAMES" />
    </Match>
    <Match>
        <!-- 多线程错误 - 在装箱的基本属性上使用了同步 -->
        <Bug pattern="DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE" />
    </Match>
    <Match>
        <!-- 不良实践 - compareTo返回的值与指定的值进行检测 -->
        <Bug pattern="RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE" />
    </Match>
    <Match>
        <!-- 使用错误 - 非虚拟方法调用向非空参数传入了null -->
        <Bug pattern="NP_NULL_PARAM_DEREF_NONVIRTUAL" />
    </Match>
    <Match>
        <!-- 性能 - 基本类型包装之后立刻解包 -->
        <Bug pattern="BX_BOXING_IMMEDIATELY_UNBOXED" />
    </Match>
    <Match>
        <!-- 错误用法 - 类覆盖了父类中实现的方法适配器错误 -->
        <Bug pattern="BOA_BADLY_OVERRIDDEN_ADAPTER" />
    </Match>
    <Match>
        <!-- 不良实践 - 如果类被扩展，GetResource的使用可能就是不安全的 -->
        <Bug pattern="UI_INHERITANCE_UNSAFE_GETRESOURCE" />
    </Match>
    <Match>
        <!-- 错误用法 - 集合的调用不能被感知 -->
        <Bug pattern="DMI_VACUOUS_SELF_COLLECTION_CALL" />
    </Match>
    <Match>
        <!-- 高危 - 类太大不能分析 -->
        <Bug pattern="SKIPPED_CLASS_TOO_BIG" />
    </Match>
    <Match>
        <!-- 不良实践 - 在所有静态final属性赋值之前static初始化块创建了一个实例 -->
        <Bug pattern="SI_INSTANCE_BEFORE_FINALS_ASSIGNED" />
    </Match>
    <Match>
        <!-- 错误用法 - 未检查/未确认的方法返回值类型转换 -->
        <Bug pattern="BC_UNCONFIRMED_CAST_OF_RETURN_VALUE" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性应该同时是final 和 package protected的 -->
        <Bug pattern="MS_FINAL_PKGPROTECT" />
    </Match>
    <Match>
        <!-- 多线程错误 - 属性不能保证同步访问 -->
        <Bug pattern="IS_FIELD_NOT_GUARDED" />
    </Match>
    <Match>
        <!-- 多线程错误 - 等待两个被持有的锁 -->
        <Bug pattern="TLW_TWO_LOCK_WAIT" />
    </Match>
    <Match>
        <!-- 多线程错误 - 在java.util.concurrent Lock上进行了同步 -->
        <Bug pattern="JLM_JSR166_LOCK_MONITORENTER" />
    </Match>
    <Match>
        <!-- 多线程错误 - 在线程中调用了run（你的意思是再启动一次么？） -->
        <Bug pattern="RU_INVOKE_RUN" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法调用应该在doPrivileged块中 -->
        <Bug pattern="DP_DO_INSIDE_DO_PRIVILEGED" />
    </Match>
    <Match>
        <!-- 不良实践 - 由double构造BigDecimal时没有指定精确度 -->
        <Bug pattern="DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE" />
    </Match>
    <Match>
        <!-- 性能 - 基本数据被装箱又被拆箱 -->
        <Bug pattern="BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION" />
    </Match>
    <Match>
        <!-- 错误用法 - 重复判断条件 -->
        <Bug pattern="RpC_REPEATED_CONDITIONAL_TEST" />
    </Match>
    <Match>
        <!-- 错误用法 - 整数剩余模1 -->
        <Bug pattern="INT_BAD_REM_BY_1" />
    </Match>
    <Match>
        <!-- 错误用法 - 检查位运算的符号 -->
        <Bug pattern="BIT_SIGNED_CHECK_HIGH_BIT" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法调用了System.exit(...) -->
        <Bug pattern="DM_EXIT" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了clone()但没有实现Cloneable -->
        <Bug pattern="CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE" />
    </Match>
    <Match>
        <!-- 不良实践 - 定义了hashCode()的类使用了Object.equals() -->
        <Bug pattern="HE_HASHCODE_USE_OBJECT_EQUALS" />
    </Match>
    <Match>
        <!-- 错误用法 - TestCase实现了非static suite方法 -->
        <Bug pattern="IJU_SUITE_NOT_STATIC" />
    </Match>
    <Match>
        <!-- 多线程错误 - 调用静态Calendar -->
        <Bug pattern="STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE" />
    </Match>
    <Match>
        <!-- 不良实践 - 某些swing方法需要在swing线程中调用 -->
        <Bug pattern="SW_SWING_METHODS_INVOKED_IN_SWING_THREAD" />
    </Match>
    <Match>
        <!-- 错误用法 - 基本类型数组传递给一个期待可变对象类型参数的方法 -->
        <Bug pattern="VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG" />
    </Match>
    <Match>
        <!-- 性能 - URL的Maps 和 sets可能是性能大问题 -->
        <Bug pattern="DMI_COLLECTION_OF_URLS" />
    </Match>
    <Match>
        <!--  错误用法 -局部变量给自己赋值而不是赋值到实例变量中 -->
        <Bug pattern="SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD" />
    </Match>
    <Match>
        <!-- 不良实践 - Comparator没有实现Serializable -->
        <Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" />
    </Match>
    <Match>
        <!-- 高危 - 无用控制流 -->
        <Bug pattern="UCF_USELESS_CONTROL_FLOW" />
    </Match>
    <Match>
        <!-- 多线程错误 - 未使用同步包裹的notify -->
        <Bug pattern="NN_NAKED_NOTIFY" />
    </Match>
    <Match>
        <!-- 不良实践 - Clone方法可能返回null -->
        <Bug pattern="NP_CLONE_COULD_RETURN_NULL" />
    </Match>
    <Match>
        <!-- 不良实践 - serialVersionUID不是long型 -->
        <Bug pattern="SE_NONLONG_SERIALVERSIONID" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法尝试访问一个ResultSet，但是使用的index是0 -->
        <Bug pattern="SQL_BAD_RESULTSET_ACCESS" />
    </Match>
    <Match>
        <!-- 错误用法 - equals()用来比较数组和非数组 -->
        <Bug pattern="EC_ARRAY_AND_NONARRAY" />
    </Match>
    <Match>
        <!-- 不良实践 - 类继承了equals()，但使用了Object.hashCode() -->
        <Bug pattern="HE_INHERITS_EQUALS_USE_HASHCODE" />
    </Match>
    <Match>
        <!-- 不良实践 - 抽象类定义了协变的compareTo()方法 -->
        <Bug pattern="CO_ABSTRACT_SELF" />
    </Match>
    <Match>
        <!-- 错误用法 - 调用equals()，与==效果一样 -->
        <Bug pattern="EC_BAD_ARRAY_COMPARE" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了equals()，但是没有hashCode() -->
        <Bug pattern="HE_EQUALS_NO_HASHCODE" />
    </Match>
    <Match>
        <!-- 不良实践 - Finalizer没有调用父类的finalizer -->
        <Bug pattern="FI_MISSING_SUPER_CALL" />
    </Match>
    <Match>
        <!-- 错误用法 - equals()比较无关的类和接口 -->
        <Bug pattern="EC_UNRELATED_CLASS_AND_INTERFACE" />
    </Match>
    <Match>
        <!-- 多线程错误 - 使用默认的空run方法创建了一个线程 -->
        <Bug pattern="DM_USELESS_THREAD" />
    </Match>
    <Match>
        <!-- 错误用法 - 重写了自增 -->
        <Bug pattern="DLS_OVERWRITTEN_INCREMENT" />
    </Match>
    <Match>
        <!-- 错误用法 - equals方法总是返回true -->
        <Bug pattern="EQ_ALWAYS_TRUE" />
    </Match>
    <Match>
        <!-- 错误用法 - 没有初始化非空字段，找到没有在构造器中写入的非空字段。 -->
        <Bug pattern="NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR" />
    </Match>
    <Match>
        <!-- 错误用法 - 一个已知的null值被检测它是否是一个类型的实例 -->
        <Bug pattern="NP_NULL_INSTANCEOF" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能在关闭流时因为异常而失败 -->
        <Bug pattern="OS_OPEN_STREAM_EXCEPTION_PATH" />
    </Match>
    <Match>
        <!-- 使用错误 - 使用equals()比较不兼容的数组 -->
        <Bug pattern="EC_INCOMPATIBLE_ARRAY_COMPARE" />
    </Match>
    <Match>
        <!-- 错误用法 - 值不要求有类型标示，但是标记为未知 -->
        <Bug pattern="TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK" />
    </Match>
    <Match>
        <!-- 高危 - 被继承的或外部的方法的模棱两可的调用 -->
        <Bug pattern="IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD" />
    </Match>
    <Match>
        <!-- 不良实践 - 非序列化值保存在序列化类的实例变量中 -->
        <Bug pattern="SE_BAD_FIELD_STORE" />
    </Match>
    <Match>
        <!-- 高危 - int相除的结果转换成double或float -->
        <Bug pattern="ICAST_IDIV_CAST_TO_DOUBLE" />
    </Match>
    <Match>
        <!-- 不良实践 - 类名不应该和实现的接口名相同 -->
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE" />
    </Match>
    <Match>
        <!-- 不良实践 - equals方法因为子类失败 -->
        <Bug pattern="EQ_GETCLASS_AND_CLASS_CONSTANT" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法可能返回null，但是声明了 @NonNull -->
        <Bug pattern="NP_NONNULL_RETURN_VIOLATION" />
    </Match>
    <Match>
        <!-- 不良实践 - toString方法可能返回null -->
        <Bug pattern="NP_TOSTRING_COULD_RETURN_NULL" />
    </Match>
    <Match>
        <!-- 性能 - 方法使用了装箱的基本类型只为了调用toString -->
        <Bug pattern="DM_BOXED_PRIMITIVE_TOSTRING" />
    </Match>
    <Match>
        <!-- 性能 - 可以筹够成一个静态内部类 -->
        <Bug pattern="SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS" />
    </Match>
    <Match>
        <!-- 错误用法 - 检查 ((...) & 0) == 0 是否成立 -->
        <Bug pattern="BIT_AND_ZZ" />
    </Match>
    <Match>
        <!-- 不良实践 - 怀疑进行了引用比较 -->
        <Bug pattern="RC_REF_COMPARISON" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用了String的toString()方法 -->
        <Bug pattern="DM_STRING_TOSTRING" />
    </Match>
    <Match>
        <!-- 多线程错误 - 同步装箱基本类型可能导致死锁 -->
        <Bug pattern="DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了compareTo(...)，但使用了Object.equals() -->
        <Bug pattern="EQ_COMPARETO_USE_OBJECT_EQUALS" />
    </Match>
    <Match>
        <!-- 错误用法 - 枚举定义了协变equals()方法定义 -->
        <Bug pattern="EQ_DONT_DEFINE_EQUALS_FOR_ENUM" />
    </Match>
    <Match>
        <!-- 高危 - for循环中存在复杂，微妙或者错误的自增 -->
        <Bug pattern="QF_QUESTIONABLE_FOR_LOOP" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法没有检查空参数 -->
        <Bug pattern="NP_ARGUMENT_MIGHT_BE_NULL" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 字段不是final的，不能防止恶意代码的攻击 -->
        <Bug pattern="MS_CANNOT_BE_FINAL" />
    </Match>
    <Match>
        <!-- 不良实践 - serialVersionUID不是final的 -->
        <Bug pattern="SE_NONFINAL_SERIALVERSIONID" />
    </Match>
    <Match>
        <!-- 错误用法 - 不可能转型 -->
        <Bug pattern="BC_IMPOSSIBLE_DOWNCAST" />
    </Match>
    <Match>
        <!-- 错误用法 - 尝试向一个对象输出流添加信息 -->
        <Bug pattern="IO_APPENDING_TO_OBJECT_OUTPUT_STREAM" />
    </Match>
    <Match>
        <!-- 不良实践 - 泛型调用中使用了未检查的类型 -->
        <Bug pattern="GC_UNCHECKED_TYPE_IN_GENERIC_CALL" />
    </Match>
    <Match>
        <!-- 性能 - 从未用到的私有方法 -->
        <Bug pattern="UPM_UNCALLED_PRIVATE_METHOD" />
    </Match>
    <Match>
        <!-- 错误用法 - 调用了数组的toString -->
        <Bug pattern="DMI_INVOKING_TOSTRING_ON_ARRAY" />
    </Match>
    <Match>
        <!-- 错误用法 - 返回语句中的无用的赋值 -->
        <Bug pattern="DLS_DEAD_LOCAL_STORE_IN_RETURN" />
    </Match>
    <Match>
        <!-- 多线程错误 - 方法在获得锁时调用了Thread.sleep() -->
        <Bug pattern="SWL_SLEEP_WITH_LOCK_HELD" />
    </Match>
    <Match>
        <!-- 错误用法 - 对属性进行双重赋值 -->
        <Bug pattern="SA_FIELD_DOUBLE_ASSIGNMENT" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法的异常路径中引用了空指针 -->
        <Bug pattern="NP_ALWAYS_NULL_EXCEPTION" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能忽略异常 -->
        <Bug pattern="DE_MIGHT_IGNORE" />
    </Match>
    <Match>
        <!-- 错误用法 - 错误比较带符号的byte -->
        <Bug pattern="INT_BAD_COMPARISON_WITH_SIGNED_BYTE" />
    </Match>
    <Match>
        <!-- 错误用法 - 在run方法中的JUnit检验不能报告给JUnit -->
        <Bug pattern="IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法调用了危险的runFinalizersOnExit方法 -->
        <Bug pattern="DM_RUN_FINALIZERS_ON_EXIT" />
    </Match>
    <Match>
        <!-- 性能 - 读不到的属性 -->
        <Bug pattern="URF_UNREAD_FIELD" />
    </Match>
    <Match>
        <!-- 试验 - findbugs丢失了期待或需要的警告 -->
        <Bug pattern="FB_MISSING_EXPECTED_WARNING" />
    </Match>
    <Match>
        <!-- 错误用法 - 对一个已经使用的值进行了null检测 -->
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE" />
    </Match>
    <Match>
        <!-- 高危 -int转换成long，用来当做绝对时间 -->
        <Bug pattern="ICAST_INT_2_LONG_AS_INSTANT" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法进行数学运算时使用了浮点数的精度 -->
        <Bug pattern="FL_MATH_USING_FLOAT_PRECISION" />
    </Match>
    <Match>
        <!-- 错误用法 - 父类的构造方法调用未初始化属性的方法 -->
        <Bug pattern="UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR" />
    </Match>
    <Match>
        <!-- 不良实践 - 直接调用finalizer -->
        <Bug pattern="FI_EXPLICIT_INVOCATION" />
    </Match>
    <Match>
        <!-- 不良实践 - 由于switch语句导致的无用存储 -->
        <Bug pattern="SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH" />
    </Match>
    <Match>
        <!-- 性能 - 巨大的字符串常量在多个类文件中间重复了 -->
        <Bug pattern="HSC_HUGE_SHARED_STRING_CONSTANT" />
    </Match>
    <Match>
        <!-- 不良实践 - 未被使用的public 或 protected 属性 -->
        <Bug pattern="UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD" />
    </Match>
    <Match>
        <!-- 试验 - 方法代理到父类方法 -->
        <Bug pattern="USM_USELESS_SUBCLASS_METHOD" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法没有覆盖父类的方法，因为参数的包不正确 -->
        <Bug pattern="NM_WRONG_PACKAGE" />
    </Match>
    <Match>
        <!-- 错误用法 - currentThread()调用的不必要用法，调用了interrupted() -->
        <Bug pattern="STI_INTERRUPTED_ON_CURRENTTHREAD" />
    </Match>
    <Match>
        <!-- 性能 - 直接调用垃圾回收，特别是在性能测试中的可疑代码 -->
        <Bug pattern="DM_GC" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法定义了一个变量，与实例变量同名。 -->
        <Bug pattern="MF_METHOD_MASKS_FIELD" />
    </Match>
    <Match>
        <!-- 高危 - 参数必须非null但是标记为可为null -->
        <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE" />
    </Match>
    <Match>
        <!-- 高危 - 调用不支持的方法 -->
        <Bug pattern="DMI_UNSUPPORTED_METHOD" />
    </Match>
    <Match>
        <!-- 不良实践 - 迷惑的方法名 -->
        <Bug pattern="NM_CONFUSING" />
    </Match>
    <Match>
        <!-- 错误用法 - 方法调用传递null给非空参数 (ALL_TARGETS_DANGEROUS) -->
        <Bug pattern="NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS" />
    </Match>
    <Match>
        <!-- 高危 - 已知的null值被重复的检测 -->
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE" />
    </Match>
    <Match>
        <!-- 高危 - 未检查/未证实的类型转换 -->
        <Bug pattern="BC_UNCONFIRMED_CAST" />
    </Match>
    <Match>
        <!-- 高危 - 重复比较两个null值 -->
        <Bug pattern="RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES" />
    </Match>
    <Match>
        <!-- 不良实践 - Finalizer空属性 -->
        <Bug pattern="FI_FINALIZER_NULLS_FIELDS" />
    </Match>
    <Match>
        <!-- 多线程错误 - 静态Calendar -->
        <Bug pattern="STCAL_STATIC_CALENDAR_INSTANCE" />
    </Match>
    <Match>
        <!-- 恶意代码漏洞 - 属性应该从接口中移除并将访问权限设置为包保护 -->
        <Bug pattern="MS_OOI_PKGPROTECT" />
    </Match>
    <Match>
        <!-- 性能 - 方法调用低效的数字构造方法;使用静态valueOf代替 -->
        <Bug pattern="DM_NUMBER_CTOR" />
    </Match>
    <Match>
        <!-- 错误用法 - File.separator用做正则表达式 -->
        <Bug pattern="RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION" />
    </Match>
    <Match>
        <!-- 错误用法 - 不兼容的位掩码(BIT_AND) -->
        <Bug pattern="BIT_AND" />
    </Match>
    <Match>
        <!-- 错误用法 - 可能出现空指针引用 -->
        <Bug pattern="NP_NULL_ON_SOME_PATH" />
    </Match>
    <Match>
        <!-- 高危 - 局部变量的自我赋值 -->
        <Bug pattern="SA_LOCAL_SELF_ASSIGNMENT" />
    </Match>
    <Match>
        <!-- 错误用法 - 协变equals()方法定义，继承了Object.equals(Object) -->
        <Bug pattern="EQ_SELF_USE_OBJECT" />
    </Match>
    <Match>
        <!-- 高危 - 方法丢掉了readLine的结果，在检测它是非空之后。 -->
        <Bug pattern="RV_DONT_JUST_NULL_CHECK_READLINE" />
    </Match>
    <Match>
        <!-- 高危 - 潜在危险使用非短跳出逻辑 -->
        <Bug pattern="NS_DANGEROUS_NON_SHORT_CIRCUIT" />
    </Match>
    <Match>
        <!-- 错误用法 - TestCase声明了一个错误的suite方法 -->
        <Bug pattern="IJU_BAD_SUITE_METHOD" />
    </Match>
    <Match>
        <!-- 错误用法 - 尝试修改ScheduledThreadPoolExecutor的最大数 -->
        <Bug pattern="DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR" />
    </Match>
    <Match>
        <!-- 多线程错误 - 错误的延迟初始化和更新静态属性 -->
        <Bug pattern="LI_LAZY_INIT_UPDATE_STATIC" />
    </Match>
    <Match>
        <!-- 多线程错误 - 在getClass上使用同步而不是在class文字上 -->
        <Bug pattern="WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL" />
    </Match>
    <Match>
        <!-- 不良实践 - 方法可能在关闭database资源时因为异常失败 -->
        <Bug pattern="ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH" />
    </Match>
    <Match>
        <!-- 错误用法 - 整数乘法的结果是整数 -->
        <Bug pattern="IM_MULTIPLYING_RESULT_OF_IREM" />
    </Match>
    <Match>
        <!-- 不良实践 - 类定义了hashcode(); 应该是hashCode()吧？ -->
        <Bug pattern="NM_LCASE_HASHCODE" />
    </Match>
    <Match>
        <!-- 错误用法 - 创建了没有任何线程的ScheduledThreadPoolExecutor -->
        <Bug pattern="DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS" />
    </Match>
</FindBugsFilter>